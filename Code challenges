#1
#Write your function here
def reversed_list(lst1, lst2) :
  lst2.reverse()
  for i in range(len(lst1)) :
    if lst1[i] == lst2[i] :      
      i += 1      
    else :      
      i += 1
      return False
  return True

#Uncomment the lines below when your function is done
print(reversed_list([1, 2, 3], [3, 2, 1]))
print(reversed_list([1, 5, 3], [3, 2, 1]))
#output
#True
#False


#2
#Write your function here
def same_values(lst1, lst2) :
  lst = []
  for i in range(len(lst1)) :
    if lst1[i] == lst2[i] :
      lst.append(i)
      i += 1
    else :
      i += 1
  return lst

#Uncomment the line below when your function is done
print(same_values([5, 1, -10, 3, 3], [5, 10, -10, 3, 5]))
#output indices
#[0, 2, 3]


#3
#Write your function here
def over_nine_thousand(lst) :
  if sum(lst) == 0:
    return 0
  else :
    s = 0
    for i in range(len(lst)) :
      if s >= 9000 :
        return s
      else :
        s += lst[i]
    return s

#Uncomment the line below when your function is done
print(over_nine_thousand([8000, 900, 120, 5000]))
#output
#9020


#4
#Write your function here
def exponents(bases, powers) :
  powered_bases = []
  for i in range(len(bases)) :    
    for j in range(len(powers)) :
      k = bases[i] ** powers[j]
      if len(powers) != 0 :      
        powered_bases.append(k)          
      else :
        i +=1 
  return powered_bases  

#Uncomment the line below when your function is done
print(exponents([2, 3, 4], [1, 2, 3]))
#output
#[2, 4, 8, 3, 9, 27, 4, 16, 64]


#5
#Write your function here
def odd_indices(lst) :
  odd = []
  for i in range(len(lst)) :
    if i % 2 != 0 :
      odd.append(lst[i])
  return odd   

#Uncomment the line below when your function is done
print(odd_indices([4, 3, 7, 10, 11, -2]))
#output
#[3, 10, -2]


#6
#Write your function here
def delete_starting_evens(lst) :
  while len(lst) > 0 and lst[0] % 2 == 0:
    lst = lst[1:]
  return lst 
#Uncomment the lines below when your function is done
print(delete_starting_evens([4, 8, 10, 11, 12, 15]))
print(delete_starting_evens([4, 8, 10]))
#output
#[11, 12, 15]
#[]


#7
